{"ast":null,"code":"import _defineProperty from \"/Users/gautamsudesh/Desktop/gs/cs/ReactHub/Rsec325/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/gautamsudesh/Desktop/gs/cs/ReactHub/Rsec325/pages/[meetupid]/index.js\",\n    _this = this;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\n\nvar MeetupDescription = function MeetupDescription(props) {\n  return (\n    /*#__PURE__*/\n    // <MeetupDetail\n    //   image=\"https://upload.wikimedia.org/wikipedia/en/5/56/Real_Madrid_CF.svg\"\n    //   title=\"Bernabeu\"\n    //   address=\"Madrid, Spain\"\n    //   description=\"Welcome to capital\"\n    // />\n    _jsxDEV(MeetupDetail, _objectSpread({}, props.meetupData), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 5\n    }, _this)\n  );\n};\n\n_c = MeetupDescription;\nexport var __N_SSG = true;\nexport default MeetupDescription;\n\nvar _c;\n\n$RefreshReg$(_c, \"MeetupDescription\");","map":{"version":3,"sources":["/Users/gautamsudesh/Desktop/gs/cs/ReactHub/Rsec325/pages/[meetupid]/index.js"],"names":["MeetupDetail","MeetupDescription","props","meetupData"],"mappings":";;;;;;;;;;AACA,OAAOA,YAAP,MAAyB,uCAAzB;;AAEA,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,CAACC,KAAD,EAAW;AACnC;AAAA;AACE;AACA;AACA;AACA;AACA;AACA;AACA,YAAC,YAAD,oBAAkBA,KAAK,CAACC,UAAxB;AAAA;AAAA;AAAA;AAAA;AAPF;AASD,CAVD;;KAAMF,iB;;AAmDN,eAAeA,iBAAf","sourcesContent":["import { MongoClient, ObjectId } from \"mongodb\";\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\n\nconst MeetupDescription = (props) => {\n  return (\n    // <MeetupDetail\n    //   image=\"https://upload.wikimedia.org/wikipedia/en/5/56/Real_Madrid_CF.svg\"\n    //   title=\"Bernabeu\"\n    //   address=\"Madrid, Spain\"\n    //   description=\"Welcome to capital\"\n    // />\n    <MeetupDetail {...props.meetupData} />\n  );\n};\n\nexport const getStaticPaths = async () => {\n  const client = await MongoClient.connect(\n    \"mongodb+srv://Sebastian:Sebastian@cluster0.rksqy.mongodb.net/meetups?retryWrites=true&w=majority\"\n  );\n  const db = client.db();\n  const meetupCollections = db.collection(\"meetups\");\n  const meetups = await meetupCollections.find({}, { _id: 1 }).toArray();\n  client.close();\n  return {\n    fallback: false,\n    paths: meetups.map((meetup) => ({\n      params: { meetupid: meetup._id.toString() },\n    })),\n  };\n};\n\nexport const getStaticProps = async (context) => {\n  const meetupid = context.params.meetupid;\n\n  const client = await MongoClient.connect(\n    \"mongodb+srv://Sebastian:Sebastian@cluster0.rksqy.mongodb.net/meetups?retryWrites=true&w=majority\"\n  );\n  const db = client.db();\n  const meetupCollections = db.collection(\"meetups\");\n  const meetup = await meetupCollections.findOne({ _id: ObjectId(meetupid) });\n  client.close();\n  return {\n    props: {\n      meetupData: {\n        id: meetup._id.toString(),\n        image: meetup.image,\n        title: meetup.title,\n        address: meetup.address,\n        description: meetup.description,\n      },\n    },\n  };\n};\n\nexport default MeetupDescription;\n"]},"metadata":{},"sourceType":"module"}