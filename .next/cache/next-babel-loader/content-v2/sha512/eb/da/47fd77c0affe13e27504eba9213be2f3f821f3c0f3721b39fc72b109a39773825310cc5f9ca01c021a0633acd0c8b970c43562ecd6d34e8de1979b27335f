{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/gautamsudesh/Desktop/gs/cs/ReactHub/Rsec325/pages/[meetupid]/index.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { MongoClient, ObjectId } from \"mongodb\";\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\nimport { Fragment } from \"react\";\nimport Head from \"next/head\";\n\nconst MeetupDescription = props => {\n  return (\n    /*#__PURE__*/\n    // <MeetupDetail\n    //   image=\"https://upload.wikimedia.org/wikipedia/en/5/56/Real_Madrid_CF.svg\"\n    //   title=\"Bernabeu\"\n    //   address=\"Madrid, Spain\"\n    //   description=\"Welcome to capital\"\n    // />\n    _jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Head, {\n        children: [/*#__PURE__*/_jsxDEV(\"title\", {\n          children: props.meetupData.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n          name: \"description\",\n          content: props.meetupData.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(MeetupDetail, _objectSpread({}, props.meetupData), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 5\n    }, this)\n  );\n};\n\nexport const getStaticPaths = async () => {\n  const client = await MongoClient.connect(\"mongodb+srv://Sebastian:Sebastian@cluster0.rksqy.mongodb.net/meetups?retryWrites=true&w=majority\");\n  const db = client.db();\n  const meetupCollections = db.collection(\"meetups\");\n  const meetups = await meetupCollections.find({}, {\n    _id: 1\n  }).toArray();\n  client.close();\n  return {\n    fallback: false,\n    paths: meetups.map(meetup => ({\n      params: {\n        meetupid: meetup._id.toString()\n      }\n    }))\n  };\n};\nexport const getStaticProps = async context => {\n  const meetupid = context.params.meetupid;\n  const client = await MongoClient.connect(\"mongodb+srv://Sebastian:Sebastian@cluster0.rksqy.mongodb.net/meetups?retryWrites=true&w=majority\");\n  const db = client.db();\n  const meetupCollections = db.collection(\"meetups\");\n  const meetup = await meetupCollections.findOne({\n    _id: ObjectId(meetupid)\n  });\n  client.close();\n  return {\n    props: {\n      meetupData: {\n        id: meetup._id.toString(),\n        image: meetup.image,\n        title: meetup.title,\n        address: meetup.address,\n        description: meetup.description\n      }\n    }\n  };\n};\nexport default MeetupDescription;","map":{"version":3,"sources":["/Users/gautamsudesh/Desktop/gs/cs/ReactHub/Rsec325/pages/[meetupid]/index.js"],"names":["MongoClient","ObjectId","MeetupDetail","Fragment","Head","MeetupDescription","props","meetupData","title","description","getStaticPaths","client","connect","db","meetupCollections","collection","meetups","find","_id","toArray","close","fallback","paths","map","meetup","params","meetupid","toString","getStaticProps","context","findOne","id","image","address"],"mappings":";;;;;;;;;AAAA,SAASA,WAAT,EAAsBC,QAAtB,QAAsC,SAAtC;AACA,OAAOC,YAAP,MAAyB,uCAAzB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,IAAP,MAAiB,WAAjB;;AAEA,MAAMC,iBAAiB,GAAIC,KAAD,IAAW;AACnC;AAAA;AACE;AACA;AACA;AACA;AACA;AACA;AACA,YAAC,QAAD;AAAA,8BACE,QAAC,IAAD;AAAA,gCACE;AAAA,oBAAQA,KAAK,CAACC,UAAN,CAAiBC;AAAzB;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAM,UAAA,IAAI,EAAC,aAAX;AAAyB,UAAA,OAAO,EAAEF,KAAK,CAACC,UAAN,CAAiBE;AAAnD;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAKE,QAAC,YAAD,oBAAkBH,KAAK,CAACC,UAAxB;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA;AAPF;AAeD,CAhBD;;AAkBA,OAAO,MAAMG,cAAc,GAAG,YAAY;AACxC,QAAMC,MAAM,GAAG,MAAMX,WAAW,CAACY,OAAZ,CACnB,kGADmB,CAArB;AAGA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AACA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AACA,QAAMC,OAAO,GAAG,MAAMF,iBAAiB,CAACG,IAAlB,CAAuB,EAAvB,EAA2B;AAAEC,IAAAA,GAAG,EAAE;AAAP,GAA3B,EAAuCC,OAAvC,EAAtB;AACAR,EAAAA,MAAM,CAACS,KAAP;AACA,SAAO;AACLC,IAAAA,QAAQ,EAAE,KADL;AAELC,IAAAA,KAAK,EAAEN,OAAO,CAACO,GAAR,CAAaC,MAAD,KAAa;AAC9BC,MAAAA,MAAM,EAAE;AAAEC,QAAAA,QAAQ,EAAEF,MAAM,CAACN,GAAP,CAAWS,QAAX;AAAZ;AADsB,KAAb,CAAZ;AAFF,GAAP;AAMD,CAdM;AAgBP,OAAO,MAAMC,cAAc,GAAG,MAAOC,OAAP,IAAmB;AAC/C,QAAMH,QAAQ,GAAGG,OAAO,CAACJ,MAAR,CAAeC,QAAhC;AAEA,QAAMf,MAAM,GAAG,MAAMX,WAAW,CAACY,OAAZ,CACnB,kGADmB,CAArB;AAGA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AACA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AACA,QAAMS,MAAM,GAAG,MAAMV,iBAAiB,CAACgB,OAAlB,CAA0B;AAAEZ,IAAAA,GAAG,EAAEjB,QAAQ,CAACyB,QAAD;AAAf,GAA1B,CAArB;AACAf,EAAAA,MAAM,CAACS,KAAP;AACA,SAAO;AACLd,IAAAA,KAAK,EAAE;AACLC,MAAAA,UAAU,EAAE;AACVwB,QAAAA,EAAE,EAAEP,MAAM,CAACN,GAAP,CAAWS,QAAX,EADM;AAEVK,QAAAA,KAAK,EAAER,MAAM,CAACQ,KAFJ;AAGVxB,QAAAA,KAAK,EAAEgB,MAAM,CAAChB,KAHJ;AAIVyB,QAAAA,OAAO,EAAET,MAAM,CAACS,OAJN;AAKVxB,QAAAA,WAAW,EAAEe,MAAM,CAACf;AALV;AADP;AADF,GAAP;AAWD,CArBM;AAuBP,eAAeJ,iBAAf","sourcesContent":["import { MongoClient, ObjectId } from \"mongodb\";\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\nimport { Fragment } from \"react\";\nimport Head from \"next/head\";\n\nconst MeetupDescription = (props) => {\n  return (\n    // <MeetupDetail\n    //   image=\"https://upload.wikimedia.org/wikipedia/en/5/56/Real_Madrid_CF.svg\"\n    //   title=\"Bernabeu\"\n    //   address=\"Madrid, Spain\"\n    //   description=\"Welcome to capital\"\n    // />\n    <Fragment>\n      <Head>\n        <title>{props.meetupData.title}</title>\n        <meta name=\"description\" content={props.meetupData.description} />\n      </Head>\n      <MeetupDetail {...props.meetupData} />\n    </Fragment>\n  );\n};\n\nexport const getStaticPaths = async () => {\n  const client = await MongoClient.connect(\n    \"mongodb+srv://Sebastian:Sebastian@cluster0.rksqy.mongodb.net/meetups?retryWrites=true&w=majority\"\n  );\n  const db = client.db();\n  const meetupCollections = db.collection(\"meetups\");\n  const meetups = await meetupCollections.find({}, { _id: 1 }).toArray();\n  client.close();\n  return {\n    fallback: false,\n    paths: meetups.map((meetup) => ({\n      params: { meetupid: meetup._id.toString() },\n    })),\n  };\n};\n\nexport const getStaticProps = async (context) => {\n  const meetupid = context.params.meetupid;\n\n  const client = await MongoClient.connect(\n    \"mongodb+srv://Sebastian:Sebastian@cluster0.rksqy.mongodb.net/meetups?retryWrites=true&w=majority\"\n  );\n  const db = client.db();\n  const meetupCollections = db.collection(\"meetups\");\n  const meetup = await meetupCollections.findOne({ _id: ObjectId(meetupid) });\n  client.close();\n  return {\n    props: {\n      meetupData: {\n        id: meetup._id.toString(),\n        image: meetup.image,\n        title: meetup.title,\n        address: meetup.address,\n        description: meetup.description,\n      },\n    },\n  };\n};\n\nexport default MeetupDescription;\n"]},"metadata":{},"sourceType":"module"}